=============================================================================
List of generated methods in project: AlarmEmiter

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "Pins1"     (component PinSettings)

Module "WAIT"      (component Wait)
   - WAIT_Wait10Cycles -Wait for 10 CPU cycles.
   - WAIT_Wait100Cycles -Wait for 100 CPU cycles.
   - WAIT_WaitCycles -Wait for a specified number of CPU cycles (16bit data type).
   - WAIT_WaitLongCycles -Wait for a specified number of CPU cycles (32bit data type).
   - WAIT_Waitms -Wait for a specified time in milliseconds.
   - WAIT_Waitus -Wait for a specified time in microseconds.
   - WAIT_Waitns -Wait for a specified time in nano seconds.
   - WAIT_WaitOSms -If an RTOS is enabled, this routine will use a non-blocking wait method. Otherwise it will do a 
                busy/blocking wait.
   - WAIT_Init -Driver initialization routine.

Module "MCUC1"     (component McuLibConfig)
   - MCUC1_Init -Driver initialization method
   - MCUC1_Deinit -Driver deinitialization method

Module "CAN1"      (component CAN_LDD)
   - CAN1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value 
                then the device is also enabled(see the description of the Enable() method). In this case the Enable() method 
                is not necessary and needn't to be generated.
   - CAN1_SetRxIDFilterTable -Sets the receive ID filter table element specified by the parameter ElementIdx. This method is 
                available only if receiver FIFO mode is enabled.
   - CAN1_SendFrame -Sends a frame via the CAN device. This method allow to specify CAN buffer number, message ID, data to be 
                sent, frame type and whether the message will be sent after the request comes.
   - CAN1_ReadFrame -Reads a frame from the CAN device. The user is informed about CAN reception through OnFullRxBuffer event 
                or GetStateRX method.

Module "Bits_Botones" (component BitsIO)
   - Bits_Botones_GetDir -Return selected direction.
   - Bits_Botones_GetVal -Returns the value of the Input/Output component. If the direction is [input] then reads the input 
                value of the pins and returns it. If the direction is [output] then returns the last written value (see <Safe 
                mode> property for limitations).
   - Bits_Botones_GetBit -Returns the value of the specified bit/pin of the Input/Output component. If the direction is [input] 
                then it reads the input value of the pin and returns it. If the direction is [output] then it returns the last 
                written value (see <Safe mode> property for limitations).

Module "AD1"       (component ADC)
   - AD1_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD1_MeasureChan -This method performs measurement on one channel. (Note: If the <number of conversions> is more than one 
                the conversion of the A/D channel is performed specified number of times.)
   - AD1_GetValue16 -This method returns the last measured values of all channels. Compared with <GetValue> method this method 
                returns more accurate result if the <number of conversions> is greater than 1 and <AD resolution> is less than 
                16 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - AD1_GetChanValue16 -This method returns the last measured value of the required channel. Compared with <GetChanValue> 
                method this method returns more accurate result if the <number of conversions> is greater than 1 and <AD 
                resolution> is less than 16 bits. In addition, the user code dependency on <AD resolution> is eliminated.

Module "Cpu"       (component MKE06Z128LK4)

===================================================================================
